name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-test:
    runs-on: macos-14
    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      CMAKE_BUILD_PARALLEL_LEVEL: 4
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup vcpkg
        uses: microsoft/vcpkg-action@v1

      - name: Install dependencies
        run: |
          echo "Using vcpkg manifest"

      - name: Configure
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DVCPKG_TARGET_TRIPLET=x64-osx -DBUILD_TESTING=ON -DCMAKE_TOOLCHAIN_FILE="${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"

      - name: Build
        run: cmake --build build --parallel

      - name: Run unit tests
        run: ctest --test-dir build --output-on-failure

      - name: Clang-Format check
        run: |
          brew update
          brew install clang-format || true
          FILES=$(git ls-files '*.h' '*.hpp' '*.cpp' '*.cc')
          echo "$FILES" | xargs -I {} bash -c "diff -u <(cat '{}') <(clang-format -style=file '{}')" || (echo 'clang-format check failed'; exit 1)

      - name: Clang-Tidy
        run: |
          brew install llvm || true
          which clang-tidy || echo "clang-tidy not found"
          # Use CMake's compile_commands.json for tidy
          cmake -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF -DCMAKE_TOOLCHAIN_FILE="${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
          python3 - <<'PY' || echo 'clang-tidy step non-blocking'
import json, subprocess, os, sys
db = json.load(open('build/compile_commands.json'))
files = [e['file'] for e in db if e['file'].endswith(('.cpp','.cc','.cxx'))]
if not files:
    sys.exit(0)
rc = 0
for f in files:
    cmd = ['clang-tidy', f, '--quiet', f'--config-file=.clang-tidy', f'-p=build']
    print('Running:', ' '.join(cmd))
    try:
        subprocess.check_call(cmd)
    except subprocess.CalledProcessError as e:
        rc = e.returncode
sys.exit(rc)
PY


