name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-test:
    runs-on: macos-14
    env:
      CMAKE_BUILD_PARALLEL_LEVEL: 4
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup vcpkg (manifest mode)
        id: vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgJsonGlob: 'vcpkg.json'
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: 'd4b65a2b83ae6c3526acd1c6f3b51aff2a884533'
          runVcpkgInstall: true

      - name: Configure
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_TOOLCHAIN_FILE="${{ steps.vcpkg.outputs.vcpkgRoot }}/scripts/buildsystems/vcpkg.cmake"

      - name: Build
        run: cmake --build build --parallel

      - name: Run unit tests
        run: ctest --test-dir build --output-on-failure

      - name: Clang-Format check
        run: |
          brew update
          brew install clang-format || true
          if ! command -v clang-format >/dev/null 2>&1; then
            echo "clang-format not available; skipping check"
            exit 0
          fi
          FILES=$(git ls-files '*.h' '*.hpp' '*.cpp' '*.cc')
          echo "$FILES" | xargs -I {} bash -c "diff -u <(cat '{}') <(clang-format -style=file -fallback-style=llvm '{}')" || (echo 'clang-format check failed'; exit 1)

      - name: Clang-Tidy
        run: |
          brew install llvm jq || true
          # Resolve clang-tidy path (Homebrew or system)
          CLANG_TIDY="$(brew --prefix llvm)/bin/clang-tidy"
          if [ ! -x "$CLANG_TIDY" ]; then CLANG_TIDY="clang-tidy"; fi
          # Use compile_commands.json from the earlier configure step
          if [ ! -f build/compile_commands.json ]; then
            echo "compile_commands.json not found; skipping clang-tidy"
            exit 0
          fi
          FILES=$(jq -r '.[].file' build/compile_commands.json | grep -E '\.(cpp|cc|cxx)$' | sort -u)
          if [ -z "$FILES" ]; then
            echo "No C/C++ source files found for clang-tidy"
            exit 0
          fi
          echo "$FILES" | xargs -I {} bash -lc '"$0" "{}" --quiet -p=build' "$CLANG_TIDY" || echo 'clang-tidy step non-blocking'
